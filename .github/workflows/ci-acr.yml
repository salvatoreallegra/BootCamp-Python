name: Test, Build & Push to ACR (bootcamp-python)

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

env:
  # Only ACR_NAME is pulled from secrets
  ACR_NAME: ${{ secrets.ACR_NAME }}
  # Derive the login server so it can't be empty
  ACR_LOGIN_SERVER: ${{ format('{0}.azurecr.io', secrets.ACR_NAME) }}
  IMAGE_NAME: bootcamp-python

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run tests
        run: |
          PYTHONPATH=. python -m pytest

  build-and-push:
    # Run on push/workflow_dispatch AND on PRs from the SAME repo.
    # Skip only forked PRs (no secrets there).
    if: github.event_name != 'pull_request' || github.event.pull_request.head.repo.fork == false
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v4

      - name: Validate ACR env
        run: |
          echo "ACR_NAME=${{ env.ACR_NAME }}"
          echo "ACR_LOGIN_SERVER=${{ env.ACR_LOGIN_SERVER }}"
          test -n "${{ env.ACR_NAME }}" || (echo "ACR_NAME is empty" && exit 1)
          test -n "${{ env.ACR_LOGIN_SERVER }}" || (echo "ACR_LOGIN_SERVER is empty" && exit 1)

      - name: Azure login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
          allow-no-subscriptions: true

      # Using ACR admin creds for guaranteed push.
      # (Once your SP has AcrPush and can enumerate subs, switch to token-based login.)
      - name: ACR login
        uses: azure/docker-login@v2
        with:
          login-server: ${{ env.ACR_LOGIN_SERVER }}
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}

      - name: Set image tags
        id: vars
        run: |
          SHA_TAG=${GITHUB_SHA::7}
          BRANCH_TAG=${GITHUB_REF_NAME//\//-}
          echo "sha_tag=$SHA_TAG" >> $GITHUB_OUTPUT
          echo "branch_tag=$BRANCH_TAG" >> $GITHUB_OUTPUT

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: |
            ${{ env.ACR_LOGIN_SERVER }}/${{ env.IMAGE_NAME }}:latest
            ${{ env.ACR_LOGIN_SERVER }}/${{ env.IMAGE_NAME }}:${{ steps.vars.outputs.branch_tag }}
            ${{ env.ACR_LOGIN_SERVER }}/${{ env.IMAGE_NAME }}:${{ steps.vars.outputs.sha_tag }}
